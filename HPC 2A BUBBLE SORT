#include<iostream>
#include<stdlib.h>
#include<omp.h>
using namespace std;
void bubble(int *, int);
void swap(int &, int &);
void bubble(int *a, int n)
{
for( int i = 0; i < n; i++ )
{
int first = i % 2;
#pragma omp parallel for shared(a,first)
for( int j = first; j < n-1; j += 2 )
{
if( a[ j ] > a[ j+1 ] )
{
swap( a[ j ], a[ j+1 ] );
}
}
}
}
void swap(int &a, int &b)
{
int test;
test=a;
a=b;
b=test;
}
int main()
{
int *a,n;
cout<<"\n enter total no of elements=>";
cin>>n;
a=new int[n];
cout<<"\n enter elements=>";
for(int i=0;i<n;i++)
{
cin>>a[i];
}
bubble(a,n);
cout<<"\n sorted array is=>";
for(int i=0;i<n;i++)
{

cout<<a[i]<<endl;
}
return 0;
}

Output :
gescoe@gescoe-OptiPlex-3010:~/Prakash$ g++ -o gfg -fopenmp HPC2A.cpp
gescoe@gescoe-OptiPlex-3010:~/Prakash$ ./gfg
enter total no of elements=>28
enter elements=>34
54
22
76
7
77
98
32
58
12
53
8
14
18
39
25
38
44
68
88
5
20
22
90
25
80
92
62
sorted array is=>5
7
8
12
14
18
20
22
22
25
25
32
34
38

39
44
53
54
58
62
68
76
77
80
88
90
92
98

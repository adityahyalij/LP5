#include<iostream>
#include<stdlib.h>
#include<omp.h>
using namespace std;
void mergesort(int a[],int i,int j);
void merge(int a[],int i1,int j1,int i2,int j2);
void mergesort(int a[],int i,int j)
{
int mid;
if(i<j)
{
mid=(i+j)/2;
#pragma omp parallel sections
{
#pragma omp section
{
mergesort(a,i,mid);
}
#pragma omp section
{
mergesort(a,mid+1,j);
}
}
merge(a,i,mid,mid+1,j);
}
}
void merge(int a[],int i1,int j1,int i2,int j2)
{
int temp[1000];
int i,j,k;
i=i1;
j=i2;
k=0;
while(i<=j1 && j<=j2)
{
if(a[i]<a[j])
{
temp[k++]=a[i++];
}
else
{
temp[k++]=a[j++];
}
}
while(i<=j1)
{

temp[k++]=a[i++];
}
while(j<=j2)
{
temp[k++]=a[j++];
}
for(i=i1,j=0;i<=j2;i++,j++)
{
a[i]=temp[j];
}
}
int main()
{
int *a,n,i;
cout<<"\n enter total no of elements=>";
cin>>n;
a= new int[n];
cout<<"\n enter elements=>";
for(i=0;i<n;i++)
{
cin>>a[i];
}
// start=.......
//#pragma omp.....
mergesort(a, 0, n-1);
// stop.......
cout<<"\n sorted array is=>";
for(i=0;i<n;i++)
{
cout<<"\n"<<a[i];
}
// Cout<<Stop-Start
return 0;
}

Output :
gescoe@gescoe-OptiPlex-3010:~/Prakash$ g++ -o gfg -fopenmp HPC2B.cpp
gescoe@gescoe-OptiPlex-3010:~/Prakash$ ./gfg
enter total no of elements=>34
enter elements=>56
3
23
7
45
44
67
79
4
65
12
15

20
18
16
55
89
22
59
51
14
5
8
11
27
17
47
68
2
41
40
50
30
88
sorted array is=>
2
3
4
5
7
8
11
12
14
15
16
17
18
20
22
23
27
30
40
41
44
45
47
50
51
55
56
59
65
67
68
79
88
